from telegram.ext import ApplicationBuilder, MessageHandler, filters, CallbackQueryHandler, CommandHandler

from gpt import *
from util import *


# —Ç—É—Ç –±—É–¥–µ–º –ø–∏—Å–∞—Ç—å –Ω–∞—à –∫–æ–¥ :)


async def hello(update, context):
    if dialog.mode == "gpt":
        await gpt_dialog(update, context)
    elif dialog.mode == "date":
        await date_dialog(update, context)
    else:
        await send_text(update, context, "–ü—Ä–∏–≤–µ—Ç!")
        await send_text(update, context, "–ö–∞–∫ –¥–µ–ª–∞, *–¥—Ä—É–∂–∏—â–µ*?")
        await send_text(update, context, "–¢—ã –Ω–∞–ø–∏—Å–∞–ª " + update.message.text)


async def hello_button(update, context):
    query = update.callback_query.data  #–∫–æ–¥ –∫–Ω–æ–ø–∫–∏
    await update.callback_query.answer()  #–ø–æ–º–µ—á–∞–µ–º —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
    await send_html(update, context, "–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É " + query)


async def start(update, context):
    dialog.mode = "main"
    text = load_message("main")
    await send_photo(update, context, "main")
    await send_text(update, context, text)

    await show_main_menu(update, context, {
    "start": "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞",
    "profile": "–≥–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–ª—è üòé",
    "opener": "—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞ ",
    "message": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà",
    "date": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•",
    "gpt": "–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —á–∞—Ç—É GPT üß†"
})

async def gpt(update, context):
    dialog.mode = "gpt"
    await send_photo(update, context, "gpt")
    await send_text(update, context, "–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ *ChatGPT*:")


async def date(update, context):
    dialog.mode = 'date'
    text = 'Hello it is date!'
    await send_text_buttons(update, context, text, {
        "date_gosling": " –†–∞–π–∞–Ω –ì–æ—Å–ª–∏–Ω–≥",
        "date_robbie": "–†–æ–±–±–∏ –ú–∞—Ä–≥–æ",
        "date_hardy": "–¢–æ–∏ –•–∞—Ä–¥–∏"
    })


async def gpt_dialog(update, context):
    my_message = await send_text(update, context, "ChatGPT –¥—É–º–∞–µ—Ç. –û–∂–∏–¥–∞–π—Ç–µ...")
    prompt = load_prompt("gpt")
    text = update.message.text
    print(update.message.text)
    answer = await chatgpt.send_question(prompt, text)
    await my_message.edit_text(answer)
    await send_text(update, context, answer)


async def date_dialog(update, context):
    text = update.message.text
    my_message = await send_text(update, context, "–î–µ–≤—É—à–∫–∞ –Ω–∞–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç...")
    answer = await chatgpt.add_message(text)
    await my_message.edit_text(answer)

async def date_button(update, context):
    query = update.callback_query.data
    await update.callback_query.answer()

    await send_photo(update, context, query)
    await send_text(update, context, " –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! ")

    prompt = load_prompt(query)
    chatgpt.set_prompt(prompt)


dialog = Dialog()
dialog.mode = 'main'
dialog.list = []

async def message_dialog(update, context):
    text = update.message.text
    dialog.list.append(text)


async def message(update, context):
    dialog.mode = "message"
    text = load_message("message")
    await send_photo(update, context, "message")
    await send_text_buttons(update, context, text, {
        "message_next": "–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ",
        "message_date": "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ",
    })
    dialog.list.clear()


async def message_button(update, context):
    query = update.callback_query.data
    await update.callback_query.answer()

    prompt = load_prompt(query)
    user_chat_history = "\n\n".join(dialog.list)
    my_message = await send_text(update, context, "ChatGPT –¥—É–º–∞–µ—Ç –Ω–∞–¥ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–∞...")
    answer = await chatgpt.send_question(prompt, user_chat_history)
    await my_message.edit_text(answer)


chatgpt = ChatGptService(
    token="gpt:--mRNrTISss9Vj3Q6lCoImv5cXw51H8RE70DG7rsRaf4bEE4")

app = ApplicationBuilder().token("7346802944:AAE-").build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("gpt", gpt))
app.add_handler(CommandHandler("date", date))


app.add_handler(CallbackQueryHandler(date_button, pattern="^date_.*"))
app.add_handler(CallbackQueryHandler(message_button, pattern="^message_.*"))

#
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, hello))  # –æ—Ç–∫–ª—é—á–∞–µ–º –∫–æ–º–∞–Ω–¥—ã

app.add_handler(CallbackQueryHandler(hello_button))

dialog = Dialog()
dialog.mode = "main"
app.run_polling()
